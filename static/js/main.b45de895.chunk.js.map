{"version":3,"sources":["constants/en.js","img/plasma-min.png","components/topnav/TopNav.js","components/footer/Footer.js","components/login/Login.js","App.js","reportWebVitals.js","index.js"],"names":["DATA","labelFileName","labelFileType","labelLastModified","msgChooseFile","msgUploading","msgUpload","msgAddPatient","msgPatients","msgError","btnUpload","navUpload","navAddPatient","navBrand","navPatients","footerContactUs","footerAboutUs","TopNav","history","useHistory","Navbar","bg","variant","Brand","width","height","src","brandImg","alt","title","onClick","push","style","cursor","Nav","className","to","Collapse","Text","Button","type","Footer","sticky","Login","Row","Col","sm","span","offset","md","lg","Card","Body","Form","onSubmit","e","preventDefault","Group","controlId","Label","Control","placeholder","value","Check","label","Upload","lazy","Patient","Patients","App","Container","fallback","Spinner","animation","role","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b45de895.chunk.js","sourcesContent":["export const DATA = {\r\n  labelFileName: \"File Name\",\r\n  labelFileType: \"File Type\",\r\n  labelLastModified: \"Last Modified\",\r\n  msgChooseFile: \"Please choose file before pressing the Upload button.\",\r\n  msgUploading: \"Uploading file. Please wait...\",\r\n  msgUpload: \"Upload donor's file.\",\r\n  msgAddPatient: \"Add Patient's details.\",\r\n  msgPatients: \"Patient's list.\",\r\n  msgError: \"Error occured. Please try again.\",\r\n  btnUpload: \"Upload!\",\r\n  navUpload: \"Upload Donors\",\r\n  navAddPatient: \"Add Patient\",\r\n  navBrand: \"Plasma Tracker\",\r\n  navPatients: \"Patients list\",\r\n  footerContactUs: \"Contact Us\",\r\n  footerAboutUs: \"About Us\",\r\n};\r\n","export default __webpack_public_path__ + \"static/media/plasma-min.28b04e5f.png\";","import brandImg from \"../../img/plasma-min.png\";\r\nimport React from \"react\";\r\nimport { Button, Nav, Navbar } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { DATA } from \"../../constants/en\";\r\nimport \"./TopNav.css\";\r\n\r\nconst TopNav = () => {\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand>\r\n        <img\r\n          width=\"24\"\r\n          height=\"24\"\r\n          src={brandImg}\r\n          alt={DATA.navBrand}\r\n          title={DATA.navBrand}\r\n          onClick={() => {\r\n            history.push(\"/login\");\r\n          }}\r\n          style={{ cursor: \"pointer\" }}\r\n        />\r\n      </Navbar.Brand>\r\n      <Nav className=\"mr-auto\">\r\n        <Link to=\"/patients\" className=\"nav-link\">\r\n          {DATA.navPatients}\r\n        </Link>\r\n        <Link to=\"/patient\" className=\"nav-link\">\r\n          {DATA.navAddPatient}\r\n        </Link>\r\n        <Link to=\"/upload\" className=\"nav-link\">\r\n          {DATA.navUpload}\r\n        </Link>\r\n      </Nav>\r\n      <Navbar.Collapse className=\"justify-content-end\">\r\n        <Navbar.Text>\r\n          <Button\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            onClick={() => {\r\n              history.push(\"/login\");\r\n            }}\r\n          >\r\n            Logout\r\n          </Button>\r\n        </Navbar.Text>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default TopNav;\r\n","// import logo from \"./logo.svg\";\r\nimport React from \"react\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DATA } from \"../../constants/en\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <hr />\r\n      <Navbar bg=\"dark\" variant=\"dark\" sticky=\"bottom\">\r\n        <Nav className=\"mr-auto\">\r\n          <Link to=\"/contactus\" className=\"nav-link\">\r\n            {DATA.footerContactUs}\r\n          </Link>\r\n          <Link to=\"/aboutus\" className=\"nav-link\">\r\n            {DATA.footerAboutUs}\r\n          </Link>\r\n        </Nav>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","// import logo from \"./logo.svg\";\r\nimport React from \"react\";\r\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  let history = useHistory();\r\n  return (\r\n    <Row>\r\n      <Col\r\n        sm={{ span: 4, offset: 4 }}\r\n        md={{ span: 4, offset: 4 }}\r\n        lg={{ span: 4, offset: 4 }}\r\n      >\r\n        <br />\r\n        <Card style={{ width: \"18rem\" }}>\r\n          <Card.Body>\r\n            <Form\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n              }}\r\n            >\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  value=\"admin@plasma.com\"\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  We'll never share your email with anyone else.\r\n                </Form.Text>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value=\"password\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicCheckbox\">\r\n                <Form.Check type=\"checkbox\" label=\"Remember me\" />\r\n              </Form.Group>\r\n              <Button\r\n                variant=\"primary\"\r\n                type=\"submit\"\r\n                onClick={() => {\r\n                  history.push(\"/patients\");\r\n                }}\r\n              >\r\n                Login\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","// import logo from \"./logo.svg\";\r\nimport React, { lazy, Suspense } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nimport \"./App.css\";\r\nimport TopNav from \"./components/topnav/TopNav\";\r\nimport Footer from \"./components/footer/Footer\";\r\nimport Login from \"./components/login/Login\";\r\n\r\nconst Upload = lazy(() => import(\"./components/upload/Upload\"));\r\nconst Patient = lazy(() => import(\"./components/patient/Patient\"));\r\nconst Patients = lazy(() => import(\"./components/patients/Patients\"));\r\n\r\nconst renderSpinner = () => {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        {\" \"}\r\n      </Spinner>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <div className=\"App\">\r\n          <Suspense fallback={renderSpinner()}>\r\n            <Router>\r\n              <TopNav></TopNav>\r\n              <Switch>\r\n                <Route path=\"/patients\">\r\n                  <Patients></Patients>\r\n                </Route>\r\n                <Route path=\"/patient/:id\">\r\n                  <Patient></Patient>\r\n                </Route>\r\n                <Route path=\"/patient\">\r\n                  <Patient></Patient>\r\n                </Route>\r\n                <Route path=\"/upload\">\r\n                  <Upload></Upload>\r\n                </Route>\r\n                <Route path=\"/\">\r\n                  <Login></Login>\r\n                </Route>\r\n              </Switch>\r\n              <Footer></Footer>\r\n            </Router>\r\n          </Suspense>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}