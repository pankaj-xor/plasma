{"version":3,"sources":["components/donation/Donation.js","constants/api.js","../node_modules/react-bootstrap/esm/Table.js"],"names":["patientsList","donorsList","Donation","useState","patients","setPatients","donors","setDonors","loading","setLoading","message","setMessage","useEffect","Axios","post","API","listDonors","then","res","data","statusCode","catch","e","DATA","msgError","listPatients","page","size","renderDonors","map","donor","index","value","className","msgDonations","animation","role","variant","striped","bordered","hover","style","textAlign","patient","name","email","mobile","Control","as","onClick","patientId","id","requestPlasma","renderPatients","env","upload","addPatient","editPatient","updatePatient","Table","React","forwardRef","_ref","ref","bsPrefix","borderless","responsive","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","createElement","_extends","responsiveClass"],"mappings":"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","file":"static/js/5.652c4e42.chunk.js","sourcesContent":["// import logo from \"./logo.svg\";\r\nimport Axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Alert, Form, Spinner, Table } from \"react-bootstrap\";\r\nimport { DATA } from \"../../constants/en\";\r\nimport { API } from \"../../constants/api\";\r\n\r\nconst patientsList = [];\r\nconst donorsList = [];\r\n\r\nconst Donation = () => {\r\n  const [patients, setPatients] = useState(patientsList);\r\n  const [donors, setDonors] = useState(donorsList);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    Axios.post(`${API.listDonors}`)\r\n      .then((res) => {\r\n        if (res && res.data && res.data.statusCode === 200) {\r\n          setLoading(false);\r\n          if (typeof res.data.data === \"string\") {\r\n            setMessage(res.data.data);\r\n          } else {\r\n            setDonors(res.data.data);\r\n          }\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false);\r\n        setMessage(\"Donors: \" + DATA.msgError);\r\n      });\r\n\r\n    Axios.post(`${API.listPatients}`, { page: 1, size: 10 })\r\n      .then((res) => {\r\n        if (res && res.data && res.data.statusCode === 200) {\r\n          setLoading(false);\r\n          if (typeof res.data.data === \"string\") {\r\n            setMessage(res.data.data);\r\n          } else {\r\n            setPatients(res.data.data);\r\n          }\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false);\r\n        setMessage(\"Patients: \" + DATA.msgError);\r\n      });\r\n  }, []);\r\n\r\n  const renderSpinner = () => {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const showMessage = () => {\r\n    return loading ? (\r\n      renderSpinner()\r\n    ) : message ? (\r\n      <Alert variant={\"primary\"}>{message}</Alert>\r\n    ) : null;\r\n  };\r\n\r\n  const closeDonationRequest = (patientId) => {\r\n    setLoading(true);\r\n    Axios.post(`${API.requestPlasma}/${patientId}`)\r\n      .then((res) => {\r\n        if (res && res.data && res.data.statusCode === 200) {\r\n          setLoading(false);\r\n          if (typeof res.data.data === \"string\") {\r\n            setMessage(res.data.data);\r\n          } else {\r\n            setMessage(\"Donation request closed successfully\");\r\n          }\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false);\r\n        setMessage(DATA.msgError);\r\n      });\r\n  };\r\n\r\n  const renderDonors = () => {\r\n    if (donors) {\r\n      return donors.map((donor, index) => {\r\n        return <option value=\"Test\">Test</option>;\r\n      });\r\n    }\r\n  };\r\n\r\n  const renderPatients = () => {\r\n    if (patients) {\r\n      return patients.map((patient, index) => {\r\n        return (\r\n          <tr key={patient.email}>\r\n            <td>{index + 1}</td>\r\n            <td>{patient.name}</td>\r\n            <td>{patient.email}</td>\r\n            <td>{patient.mobile}</td>\r\n            <td>\r\n              <Form.Control\r\n                as=\"select\"\r\n                // value={state.bloodGroup}\r\n                // onChange={(e) =>\r\n                //   dispatch({ type: \"bloodGroup\", payload: e.target.value })\r\n                // }\r\n              >\r\n                <option value=\"\">Select Donor</option>\r\n                {renderDonors()}\r\n              </Form.Control>\r\n            </td>\r\n            <td style={{ textAlign: \"center\" }}>\r\n              <span\r\n                className=\"link\"\r\n                onClick={() => closeDonationRequest(patient.id)}\r\n              >\r\n                Close Donation Request\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h4 className=\"text-center mar-top-bot-2rem\">{DATA.msgDonations}</h4>\r\n      <hr />\r\n      {showMessage()}\r\n      <br />\r\n      <Table striped bordered hover size=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Mobile No</th>\r\n            <th>Donars List</th>\r\n            <th style={{ textAlign: \"center\" }}>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{renderPatients()}</tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Donation;\r\n","export const URL = {\r\n  local: \"http://localhost:8080/\",\r\n  server: \"https://plasma-donor.herokuapp.com/\",\r\n};\r\n\r\nconst env = URL.server;\r\n\r\nexport const API = {\r\n  upload: `${env}api/patient/upload`,\r\n  addPatient: `${env}api/patient/create`,\r\n  editPatient: `${env}api/patient/findById`,\r\n  updatePatient: `${env}api/patient/update`,\r\n  listPatients: `${env}api/patient/findAll`,\r\n  requestPlasma: `${env}api/plasma/request`,\r\n  listDonors: `${env}api/plasma/request/close/getdata`,\r\n};\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;"],"sourceRoot":""}