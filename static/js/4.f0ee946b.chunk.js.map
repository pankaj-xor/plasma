{"version":3,"sources":["constants/api.js","../node_modules/react-bootstrap/esm/Table.js","components/upload/Upload.js"],"names":["env","API","upload","addPatient","editPatient","updatePatient","listPatients","requestPlasma","listDonors","Table","React","forwardRef","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","createElement","_extends","responsiveClass","Upload","useState","selectedFile","setSelectedFile","loading","setLoading","DATA","msgChooseFile","message","setMessage","sm","span","offset","md","lg","msgUpload","File","id","name","onChange","event","target","files","required","type","onClick","formData","FormData","append","axios","post","then","res","data","statusCode","catch","e","msgError","btnUpload","animation","role","msgUploading","labelFileName","labelFileType","labelLastModified","lastModifiedDate","toDateString"],"mappings":"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","file":"static/js/4.f0ee946b.chunk.js","sourcesContent":["export const URL = {\r\n  local: \"http://localhost:8080/\",\r\n  server: \"https://plasma-donor.herokuapp.com/\",\r\n};\r\n\r\nconst env = URL.server;\r\n\r\nexport const API = {\r\n  upload: `${env}api/patient/upload`,\r\n  addPatient: `${env}api/patient/create`,\r\n  editPatient: `${env}api/patient/findById`,\r\n  updatePatient: `${env}api/patient/update`,\r\n  listPatients: `${env}api/patient/findAll`,\r\n  requestPlasma: `${env}api/plasma/request`,\r\n  listDonors: `${env}api/plasma/request/close/getdata`,\r\n};\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Form, Alert, Spinner, Row, Col, Table } from \"react-bootstrap\";\r\nimport \"./Upload.css\";\r\nimport { API } from \"../../constants/api\";\r\nimport { DATA } from \"../../constants/en\";\r\n\r\nconst Upload = () => {\r\n  // Initially, no file is selected\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(DATA.msgChooseFile);\r\n\r\n  // On file select (from the pop up)\r\n  const onFileChange = (event) => {\r\n    // Update the state\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  // On file upload (click the upload button)\r\n  const onFileUpload = () => {\r\n    if (!selectedFile) {\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    // Create an object of formData\r\n    const formData = new FormData();\r\n\r\n    // Update the formData object\r\n    formData.append(\"file\", selectedFile, selectedFile.name);\r\n\r\n    // Details of the uploaded file\r\n    // console.log(selectedFile);\r\n\r\n    // Request made to the backend api\r\n    // Send formData object\r\n    axios\r\n      .post(API.upload, formData)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        if (res && res.data && res.data.statusCode === 200) {\r\n          setSelectedFile(null);\r\n          setMessage(res.data.data);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false);\r\n        setSelectedFile(null);\r\n        setMessage(DATA.msgError);\r\n      });\r\n  };\r\n\r\n  const renderSpinner = () => {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">{DATA.msgUploading}</span>\r\n        </Spinner>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // File content to be displayed after\r\n  // file upload is complete\r\n  const fileData = () => {\r\n    if (loading) {\r\n      return renderSpinner();\r\n    }\r\n    if (selectedFile) {\r\n      return (\r\n        <Table striped bordered hover size=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>{DATA.labelFileName}</th>\r\n              <th>{DATA.labelFileType}</th>\r\n              <th>{DATA.labelLastModified}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>{selectedFile.name}</td>\r\n              <td>{selectedFile.type}</td>\r\n              <td>{selectedFile.lastModifiedDate.toDateString()}</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      );\r\n    } else {\r\n      return <Alert variant={\"primary\"}>{message}</Alert>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col\r\n          sm={{ span: 6, offset: 3 }}\r\n          md={{ span: 6, offset: 3 }}\r\n          lg={{ span: 6, offset: 3 }}\r\n        >\r\n          <h4 className=\"text-center mar-top-bot-2rem\">{DATA.msgUpload}</h4>\r\n\r\n          <hr />\r\n          <Form>\r\n            <Row>\r\n              <Col sm=\"9\" md=\"9\">\r\n                <Form.File id=\"upload\" name=\"upload\" onChange={onFileChange} required />\r\n              </Col>\r\n              <Col>\r\n                <Button variant=\"primary\" type=\"submit\" onClick={onFileUpload}>\r\n                  {DATA.btnUpload}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <br />\r\n          {fileData()}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n"],"sourceRoot":""}