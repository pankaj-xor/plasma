{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/patient/Patient.js","constants/api.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","initialState","name","age","gender","mobile","email","address","city","state","zip","weight","bloodGroup","hbLevel","admissionDate","dischargeDate","willingToDonate","hasCovidRecovered","hasCancerPatient","hasHIV","hasHepatitis","hasBP","hasHTLV1","hasHeartAilment","hasKidneyAilment","hasPrgenantInPast","hasTB","hasTatto","hasSurgery","reducer","action","type","payload","Error","Patient","useReducer","dispatch","useState","loading","setLoading","message","setMessage","id","useParams","useEffect","Axios","post","API","editPatient","then","res","data","statusCode","catch","e","DATA","msgError","showMessage","className","Spinner","animation","role","Alert","variant","msgAddPatient","Form","onSubmit","preventDefault","Group","as","Row","Label","Col","sm","Control","placeholder","size","onChange","Button","onClick","updatePatient","addPatient","env","upload","listPatients","requestPlasma","listDonors"],"mappings":"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","file":"static/js/7.94871af2.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","// import logo from \"./logo.svg\";\r\nimport React, { useEffect, useReducer, useState } from \"react\";\r\nimport { DATA } from \"../../constants/en\";\r\nimport { Button, Form, Row, Col, Alert, Spinner } from \"react-bootstrap\";\r\nimport Axios from \"axios\";\r\nimport { API } from \"../../constants/api\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  age: 0,\r\n  gender: \"\",\r\n  mobile: 0,\r\n  email: \"\",\r\n  address: \"\",\r\n  city: \"\",\r\n  state: \"\",\r\n  zip: 0,\r\n  weight: 0,\r\n  bloodGroup: \"A\",\r\n  hbLevel: \"\",\r\n  admissionDate: \"\",\r\n  dischargeDate: \"\",\r\n  willingToDonate: \"Y\",\r\n  hasCovidRecovered: \"Y\",\r\n  hasCancerPatient: \"N\",\r\n  hasHIV: \"N\",\r\n  hasHepatitis: \"N\",\r\n  hasBP: \"N\",\r\n  hasHTLV1: \"N\",\r\n  hasHeartAilment: \"N\",\r\n  hasKidneyAilment: \"N\",\r\n  hasPrgenantInPast: \"N\",\r\n  hasTB: \"N\",\r\n  hasTatto: \"N\",\r\n  hasSurgery: \"N\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  // console.log(state, action);\r\n  switch (action.type) {\r\n    case \"name\":\r\n      return { ...state, name: action.payload };\r\n    case \"age\":\r\n      return { ...state, age: action.payload };\r\n    case \"gender\":\r\n      return { ...state, gender: action.payload };\r\n    case \"mobile\":\r\n      return { ...state, mobile: action.payload };\r\n    case \"email\":\r\n      return { ...state, email: action.payload };\r\n    case \"address\":\r\n      return { ...state, address: action.payload };\r\n    case \"state\":\r\n      return { ...state, state: action.payload };\r\n    case \"city\":\r\n      return { ...state, city: action.payload };\r\n    case \"zip\":\r\n      return { ...state, zip: action.payload };\r\n    case \"weight\":\r\n      return { ...state, weight: action.payload };\r\n    case \"bloodGroup\":\r\n      return { ...state, bloodGroup: action.payload };\r\n    case \"hbLevel\":\r\n      return { ...state, hbLevel: action.payload };\r\n    case \"admissionDate\":\r\n      return { ...state, admissionDate: action.payload };\r\n    case \"dischargeDate\":\r\n      return { ...state, dischargeDate: action.payload };\r\n    case \"willingToDonate\":\r\n      return { ...state, willingToDonate: action.payload };\r\n    case \"hasCovidRecovered\":\r\n      return { ...state, hasCovidRecovered: action.payload };\r\n    case \"hasCancerPatient\":\r\n      return { ...state, hasCancerPatient: action.payload };\r\n    case \"hasHIV\":\r\n      return { ...state, hasHIV: action.payload };\r\n    case \"hasHepatitis\":\r\n      return { ...state, hasHepatitis: action.payload };\r\n    case \"hasBP\":\r\n      return { ...state, hasBP: action.payload };\r\n    case \"hasHTLV1\":\r\n      return { ...state, hasHTLV1: action.payload };\r\n    case \"hasHeartAilment\":\r\n      return { ...state, hasHeartAilment: action.payload };\r\n    case \"hasKidneyAilment\":\r\n      return { ...state, hasKidneyAilment: action.payload };\r\n    case \"hasPrgenantInPast\":\r\n      return { ...state, hasPrgenantInPast: action.payload };\r\n    case \"hasTB\":\r\n      return { ...state, hasTB: action.payload };\r\n    case \"hasTatto\":\r\n      return { ...state, hasTatto: action.payload };\r\n    case \"hasSurgery\":\r\n      return { ...state, hasSurgery: action.payload };\r\n    case \"submit\":\r\n      return initialState;\r\n    case \"reset\":\r\n      return initialState;\r\n    case \"get\":\r\n      return { ...action.payload };\r\n    case \"update\":\r\n      return state;\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst Patient = () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  let { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      setLoading(true);\r\n      Axios.post(`${API.editPatient}/${id}`)\r\n        .then((res) => {\r\n          if (res && res.data && res.data.statusCode === 200) {\r\n            setLoading(false);\r\n            if (typeof res.data.data === \"string\") {\r\n              setMessage(res.data.data);\r\n            } else {\r\n              // setMessage(\"Patient form loaded successfully for updating.\");\r\n              dispatch({ type: \"get\", payload: res.data.data });\r\n            }\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          setLoading(false);\r\n          setMessage(DATA.msgError);\r\n        });\r\n    } else {\r\n      dispatch({ type: \"reset\" });\r\n    }\r\n  }, [id]);\r\n\r\n  const renderSpinner = () => {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    setLoading(true);\r\n    if (id) {\r\n      Axios.post(`${API.updatePatient}/${id}`, state)\r\n        .then((res) => {\r\n          if (res && res.data && res.data.statusCode === 200) {\r\n            setLoading(false);\r\n            setMessage(\"Patient successfully updated\");\r\n            dispatch({ type: \"update\" });\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          setLoading(false);\r\n          setMessage(DATA.msgError);\r\n        });\r\n    } else {\r\n      Axios.post(API.addPatient, state)\r\n        .then((res) => {\r\n          if (res && res.data && res.data.statusCode === 200) {\r\n            setLoading(false);\r\n            setMessage(\"Patient successfully added\");\r\n            dispatch({ type: \"submit\" });\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          setLoading(false);\r\n          setMessage(DATA.msgError);\r\n        });\r\n    }\r\n  };\r\n\r\n  const onReset = () => {\r\n    setMessage(\"\");\r\n    dispatch({ type: \"reset\" });\r\n  };\r\n\r\n  const showMessage = () => {\r\n    return loading ? (\r\n      renderSpinner()\r\n    ) : message ? (\r\n      <Alert variant={\"primary\"}>{message}</Alert>\r\n    ) : null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h4 className=\"text-center mar-top-bot-2rem\">{DATA.msgAddPatient}</h4>\r\n      <hr />\r\n      {showMessage()}\r\n      <br />\r\n      <Form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n        }}\r\n      >\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Full Name\r\n          </Form.Label>\r\n          <Col sm=\"10\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Full Name\"\r\n              size=\"sm\"\r\n              value={state.name}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"name\", payload: e.target.value })\r\n              }\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Age\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Enter Age\"\r\n              size=\"sm\"\r\n              value={state.age}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"age\", payload: e.target.value })\r\n              }\r\n            />\r\n          </Col>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Gender{\" \"}\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.gender}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"gender\", payload: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"\">Select Gender</option>\r\n              <option value=\"M\">Male</option>\r\n              <option value=\"F\">Female</option>\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Mobile\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Enter Mobile No\"\r\n              size=\"sm\"\r\n              value={state.mobile}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"mobile\", payload: e.target.value })\r\n              }\r\n            />\r\n          </Col>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Email Id\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter Email Id\"\r\n              size=\"sm\"\r\n              value={state.email}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"email\", payload: e.target.value })\r\n              }\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Address\r\n          </Form.Label>\r\n          <Col>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Address\"\r\n              size=\"sm\"\r\n              value={state.address}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"address\", payload: e.target.value })\r\n              }\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            State\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter State\"\r\n              size=\"sm\"\r\n              value={state.state}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"state\", payload: e.target.value })\r\n              }\r\n            />\r\n          </Col>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            City\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter City\"\r\n              size=\"sm\"\r\n              value={state.city}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"city\", payload: e.target.value })\r\n              }\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Zip\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Enter Zip\"\r\n              size=\"sm\"\r\n              value={state.zip}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"zip\", payload: e.target.value })\r\n              }\r\n            />\r\n          </Col>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Weight\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Enter Weight\"\r\n              size=\"sm\"\r\n              value={state.weight}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"weight\", payload: e.target.value })\r\n              }\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Blood\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.bloodGroup}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"bloodGroup\", payload: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"A+\">A+</option>\r\n              <option value=\"A-\">A-</option>\r\n              <option value=\"B+\">B+</option>\r\n              <option value=\"B-\">B-</option>\r\n              <option value=\"AB+\">AB+</option>\r\n              <option value=\"AB-\">AB-</option>\r\n              <option value=\"O+\">O+</option>\r\n              <option value=\"O-\">O-</option>\r\n            </Form.Control>\r\n          </Col>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            HB Level\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter HB Level\"\r\n              size=\"sm\"\r\n              value={state.hbLevel}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"hbLevel\", payload: e.target.value })\r\n              }\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Admission Date\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              type=\"date\"\r\n              placeholder=\"Enter Admission Date\"\r\n              size=\"sm\"\r\n              value={state.admissionDate}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"admissionDate\", payload: e.target.value })\r\n              }\r\n            />\r\n          </Col>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Discharge Date\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              type=\"date\"\r\n              placeholder=\"Enter Discharge Date\"\r\n              size=\"sm\"\r\n              value={state.dischargeDate}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"dischargeDate\", payload: e.target.value })\r\n              }\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Willing to donate?\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.willingToDonate}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"willingToDonate\", payload: e.target.value })\r\n              }\r\n            >\r\n              <option>Yes</option>\r\n              <option>No</option>\r\n            </Form.Control>\r\n          </Col>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Has covid recovered?\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.hasCovidRecovered}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"hasCovidRecovered\", payload: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"Y\">Yes</option>\r\n              <option value=\"N\">No</option>\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Has Cancer patient?\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.hasCancerPatient}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"hasCancerPatient\", payload: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"Y\">Yes</option>\r\n              <option value=\"N\">No</option>\r\n            </Form.Control>\r\n          </Col>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Has HIV?\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.hasHIV}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"hasHIV\", payload: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"Y\">Yes</option>\r\n              <option value=\"N\">No</option>\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Has Hepatitis?\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.hasHepatitis}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"hasHepatitis\", payload: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"Y\">Yes</option>\r\n              <option value=\"N\">No</option>\r\n            </Form.Control>\r\n          </Col>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Has BP?\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.hasBP}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"hasBP\", payload: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"Y\">Yes</option>\r\n              <option value=\"N\">No</option>\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Has HTLV1?\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.hasHTLV1}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"hasHTLV1\", payload: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"Y\">Yes</option>\r\n              <option value=\"N\">No</option>\r\n            </Form.Control>\r\n          </Col>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Has Heart Ailment?\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.hasHeartAilment}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"hasHeartAilment\", payload: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"Y\">Yes</option>\r\n              <option value=\"N\">No</option>\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Has Kidney Ailment?\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.hasKidneyAilment}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"hasKidneyAilment\", payload: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"Y\">Yes</option>\r\n              <option value=\"N\">No</option>\r\n            </Form.Control>\r\n          </Col>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Has Pregnant in Past?\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.hasPrgenantInPast}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"hasPrgenantInPast\", payload: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"Y\">Yes</option>\r\n              <option value=\"N\">No</option>\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Has TB?\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.hasTB}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"hasTB\", payload: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"Y\">Yes</option>\r\n              <option value=\"N\">No</option>\r\n            </Form.Control>\r\n          </Col>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Has Tatto?\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.hasTatto}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"hasTatto\", payload: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"Y\">Yes</option>\r\n              <option value=\"N\">No</option>\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Has Surgery?\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.hasSurgery}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"hasSurgery\", payload: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"Y\">Yes</option>\r\n              <option value=\"N\">No</option>\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <div className=\"text-center\">\r\n          <Button variant=\"primary\" type=\"submit\" size=\"sm\" onClick={onSubmit}>\r\n            Submit\r\n          </Button>{\" \"}\r\n          <Button variant=\"secondary\" type=\"reset\" size=\"sm\" onClick={onReset}>\r\n            Reset\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n      <br />\r\n      {showMessage()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Patient;\r\n","export const URL = {\r\n  local: \"http://localhost:8080/\",\r\n  server: \"https://plasma-donor.herokuapp.com/\",\r\n};\r\n\r\nconst env = URL.server;\r\n\r\nexport const API = {\r\n  upload: `${env}api/patient/upload`,\r\n  addPatient: `${env}api/patient/create`,\r\n  editPatient: `${env}api/patient/findById`,\r\n  updatePatient: `${env}api/patient/update`,\r\n  listPatients: `${env}api/patient/findAll`,\r\n  requestPlasma: `${env}api/plasma/request`,\r\n  listDonors: `${env}api/request/close/getdata`,\r\n};\r\n"],"sourceRoot":""}