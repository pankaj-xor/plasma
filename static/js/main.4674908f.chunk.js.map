{"version":3,"sources":["constants/en.js","img/plasma-min.png","components/topnav/TopNav.js","components/footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["DATA","labelFileName","labelFileType","labelLastModified","msgChooseFile","msgUploading","msgUpload","msgAddPatient","msgError","btnUpload","navUpload","navAddPatient","navBrand","footerContactUs","footerAboutUs","TopNav","Navbar","bg","variant","Brand","to","className","width","height","src","brandImg","alt","title","Nav","Footer","sticky","Upload","lazy","Patient","App","Container","fallback","Spinner","animation","role","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iGAAA,kCAAO,IAAMA,EAAO,CAClBC,cAAe,YACfC,cAAe,YACfC,kBAAmB,gBACnBC,cAAe,wDACfC,aAAc,iCACdC,UAAW,uBACXC,cAAe,yBACfC,SAAU,mCACVC,UAAW,UACXC,UAAW,gBACXC,cAAe,cACfC,SAAU,iBACVC,gBAAiB,aACjBC,cAAe,a,yLCdF,G,MAAA,IAA0B,wC,wBCiC1BC,G,MA1BA,WACb,OACE,eAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAA1B,UACE,cAACF,EAAA,EAAOG,MAAR,UACE,cAAC,IAAD,CAAMC,GAAG,IAAIC,UAAU,WAAvB,SACE,qBACEC,MAAM,KACNC,OAAO,KACPC,IAAKC,EACLC,IAAK1B,IAAKY,SACVe,MAAO3B,IAAKY,eAIlB,eAACgB,EAAA,EAAD,CAAKP,UAAU,UAAf,UACE,cAAC,IAAD,CAAMD,GAAG,UAAUC,UAAU,WAA7B,SACGrB,IAAKU,YAER,cAAC,IAAD,CAAMU,GAAG,cAAcC,UAAU,WAAjC,SACGrB,IAAKW,wBCFDkB,EAlBA,WACb,OACE,qCACE,uBACA,cAACb,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOY,OAAO,SAAxC,SACE,eAACF,EAAA,EAAD,CAAKP,UAAU,UAAf,UACE,cAAC,IAAD,CAAMD,GAAG,aAAaC,UAAU,WAAhC,SACGrB,IAAKa,kBAER,cAAC,IAAD,CAAMO,GAAG,WAAWC,UAAU,WAA9B,SACGrB,IAAKc,yBCNZiB,EAASC,gBAAK,kBAAM,sDACpBC,EAAUD,gBAAK,kBAAM,gCAoCZE,EAlCH,WACV,OACE,mCACE,cAACC,EAAA,EAAD,UACE,qBAAKd,UAAU,MAAf,SACE,cAAC,WAAD,CACEe,SACE,cAACC,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAAjC,SACG,MAHP,SAOE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,UAAZ,SACE,cAACT,EAAD,MAEF,cAAC,IAAD,CAAOS,KAAK,cAAZ,SACE,cAACP,EAAD,MAEF,cAAC,IAAD,CAAOO,KAAK,IAAZ,SACE,cAACT,EAAD,SAGJ,cAAC,EAAD,gBC1BCU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4674908f.chunk.js","sourcesContent":["export const DATA = {\r\n  labelFileName: \"File Name\",\r\n  labelFileType: \"File Type\",\r\n  labelLastModified: \"Last Modified\",\r\n  msgChooseFile: \"Please choose file before pressing the Upload button.\",\r\n  msgUploading: \"Uploading file. Please wait...\",\r\n  msgUpload: \"Upload donor's file.\",\r\n  msgAddPatient: \"Add Patient's details.\",\r\n  msgError: \"Error occured. Please try again.\",\r\n  btnUpload: \"Upload!\",\r\n  navUpload: \"Upload Donors\",\r\n  navAddPatient: \"Add Patient\",\r\n  navBrand: \"Plasma Tracker\",\r\n  footerContactUs: \"Contact Us\",\r\n  footerAboutUs: \"About Us\",\r\n};\r\n","export default __webpack_public_path__ + \"static/media/plasma-min.28b04e5f.png\";","import brandImg from \"../../img/plasma-min.png\";\r\nimport React from \"react\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DATA } from \"../../constants/en\";\r\nimport \"./TopNav.css\";\r\n\r\nconst TopNav = () => {\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand>\r\n        <Link to=\"/\" className=\"nav-link\">\r\n          <img\r\n            width=\"24\"\r\n            height=\"24\"\r\n            src={brandImg}\r\n            alt={DATA.navBrand}\r\n            title={DATA.navBrand}\r\n          />\r\n        </Link>\r\n      </Navbar.Brand>\r\n      <Nav className=\"mr-auto\">\r\n        <Link to=\"/upload\" className=\"nav-link\">\r\n          {DATA.navUpload}\r\n        </Link>\r\n        <Link to=\"/addpatient\" className=\"nav-link\">\r\n          {DATA.navAddPatient}\r\n        </Link>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default TopNav;\r\n","// import logo from \"./logo.svg\";\r\nimport React from \"react\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DATA } from \"../../constants/en\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <hr />\r\n      <Navbar bg=\"dark\" variant=\"dark\" sticky=\"bottom\">\r\n        <Nav className=\"mr-auto\">\r\n          <Link to=\"/contactus\" className=\"nav-link\">\r\n            {DATA.footerContactUs}\r\n          </Link>\r\n          <Link to=\"/aboutus\" className=\"nav-link\">\r\n            {DATA.footerAboutUs}\r\n          </Link>\r\n        </Nav>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","// import logo from \"./logo.svg\";\r\nimport React, { lazy, Suspense } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nimport \"./App.css\";\r\nimport TopNav from \"./components/topnav/TopNav\";\r\nimport Footer from \"./components/footer/Footer\";\r\n\r\nconst Upload = lazy(() => import(\"./components/upload/Upload\"));\r\nconst Patient = lazy(() => import(\"./components/patient/Patient\"));\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <div className=\"App\">\r\n          <Suspense\r\n            fallback={\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                {\" \"}\r\n              </Spinner>\r\n            }\r\n          >\r\n            <Router>\r\n              <TopNav></TopNav>\r\n              <Switch>\r\n                <Route path=\"/upload\">\r\n                  <Upload></Upload>\r\n                </Route>\r\n                <Route path=\"/addPatient\">\r\n                  <Patient></Patient>\r\n                </Route>\r\n                <Route path=\"/\">\r\n                  <Upload></Upload>\r\n                </Route>\r\n              </Switch>\r\n              <Footer></Footer>\r\n            </Router>\r\n          </Suspense>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}